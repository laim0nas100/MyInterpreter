<Root>
Label 0B
Number 0
Parents[]
Children[0, 1, 2, 3, 4, 5, 6]
<Statement>
<FunctionDeclaration>
<VariableDeclaration>
<Type>
INT
</Type>
name =f</VariableDeclaration>
<FnParameter>
<VariableDeclaration>
<Type>
INT[]
</Type>
name =a</VariableDeclaration>
</FnParameter>
<FnParameter>
<VariableDeclaration>
<Type>
FLOAT[]
</Type>
name =c</VariableDeclaration>
</FnParameter>
<Block>
Label 0B0B
Number 0
Parents[0]
Children[]
<Statement>
<VariableInitialization>
<VariableDeclaration>
<Type>
INT
</Type>
name =b</VariableDeclaration>
value=<BinaryOperator>
<BinaryOperator>
<BinaryOperator>
<Int_Const>
3</Int_Const>
MULTIPLY<Int_Const>
12</Int_Const>
</BinaryOperator>
PLUS<Int_Const>
3</Int_Const>
</BinaryOperator>
PLUS<Int_Const>
1</Int_Const>
</BinaryOperator>
</VariableInitialization>
</Statement>
<Statement>
<ReturnStatement>
<Int_Const>
10</Int_Const>
</ReturnStatement>
</Statement>
</Block>
</FunctionDeclaration>
</Statement>
<Statement>
<Block>
Label 1B0B
Number 1
Parents[0]
Children[]
</Block>
</Statement>
<Statement>
<VariableAssign>
<ValueCall>
a</ValueCall>
<ValueCall>
a</ValueCall>
</VariableAssign>
</Statement>
<Statement>
<VariableInitialization>
<VariableDeclaration>
<Type>
STRING
</Type>
name =s</VariableDeclaration>
value=<String_const>
ok" ok</String_const>
</VariableInitialization>
</Statement>
<Statement>
<VariableInitialization>
<VariableDeclaration>
<Type>
STRING
</Type>
name =s1</VariableDeclaration>
value=<String_const>
</String_const>
</VariableInitialization>
</Statement>
<Statement>
<Block>
Label 2B0B
Number 2
Parents[0]
Children[0]
<Statement>
<VariableInitialization>
<VariableDeclaration>
<Type>
INT
</Type>
name =a</VariableDeclaration>
value=<BinaryOperator>
<BinaryOperator>
<Int_Const>
10</Int_Const>
PLUS<BinaryOperator>
<Int_Const>
15</Int_Const>
MULTIPLY<Int_Const>
2</Int_Const>
</BinaryOperator>
</BinaryOperator>
PLUS<FunctionCall>
<ValueCall>
b</ValueCall>
<Arguments>
<Arg>
<Int_Const>
1</Int_Const>
</Arg>
<Arg>
<BinaryOperator>
<Int_Const>
12</Int_Const>
PLUS<Int_Const>
3</Int_Const>
</BinaryOperator>
</Arg>
</Arguments>
</FunctionCall>
</BinaryOperator>
</VariableInitialization>
</Statement>
<Statement>
<VariableInitialization>
<VariableDeclaration>
<Type>
STRING
</Type>
name =s</VariableDeclaration>
value=<Null_const>
null</Null_const>
</VariableInitialization>
</Statement>
<Statement>
<ArrayDeclaration>
<VariableDeclaration>
<Type>
INT
</Type>
name =array</VariableDeclaration>
size=<BinaryOperator>
<Int_Const>
10</Int_Const>
PLUS<Int_Const>
10</Int_Const>
</BinaryOperator>

</ArrayDeclaration>
</Statement>
<Statement>
<ReturnStatement>
<Int_Const>
10</Int_Const>
</ReturnStatement>
</Statement>
<Statement>
<IfStatement>
if<ValueCall>
True</ValueCall>
do<Statement>
<Block>
Label 0B2B0B
Number 0
Parents[2]
Children[]
<Statement>
<PrintStatement>
<ValueCall>
print</ValueCall>
<Arguments>
<Arg>
<String_const>
OK</String_const>
</Arg>
</Arguments>
</PrintStatement>
</Statement>
</Block>
</Statement>
</IfStatement>
</Statement>
</Block>
</Statement>
<Statement>
<FunctionDeclaration>
<VariableDeclaration>
<Type>
INT
</Type>
name =f</VariableDeclaration>
<FnParameter>
<VariableDeclaration>
<Type>
INT[]
</Type>
name =a</VariableDeclaration>
</FnParameter>
<FnParameter>
<VariableDeclaration>
<Type>
FLOAT[]
</Type>
name =c</VariableDeclaration>
</FnParameter>
<Block>
Label 3B0B
Number 3
Parents[0]
Children[]
<Statement>
<VariableInitialization>
<VariableDeclaration>
<Type>
INT
</Type>
name =b</VariableDeclaration>
value=<BinaryOperator>
<BinaryOperator>
<Int_Const>
3</Int_Const>
MULTIPLY<Int_Const>
12</Int_Const>
</BinaryOperator>
PLUS<Int_Const>
3</Int_Const>
</BinaryOperator>
</VariableInitialization>
</Statement>
<Statement>
<ReturnStatement>
<Int_Const>
10</Int_Const>
</ReturnStatement>
</Statement>
</Block>
</FunctionDeclaration>
</Statement>
<Statement>
<WhileLoop>
While<ValueCall>
True</ValueCall>
do<Statement>
<Block>
Label 4B0B
Number 4
Parents[0]
Children[]
<Statement>
<PrintStatement>
<ValueCall>
print</ValueCall>
<Arguments>
<Arg>
<String_const>
p</String_const>
</Arg>
</Arguments>
</PrintStatement>
</Statement>
<Statement>
<VariableInitialization>
<VariableDeclaration>
<Type>
STRING
</Type>
name =s</VariableDeclaration>
value=<PrintStatement>
<ValueCall>
print</ValueCall>
<Arguments>
<Arg>
<String_const>
feed me</String_const>
</Arg>
</Arguments>
</PrintStatement>
</VariableInitialization>
</Statement>
<Statement>
<VariableInitialization>
<VariableDeclaration>
<Type>
STRING
</Type>
name =s</VariableDeclaration>
value=<Float_Const>
1.1</Float_Const>
</VariableInitialization>
</Statement>
</Block>
</Statement>
</WhileLoop>
</Statement>
<Statement>
<IfStatement>
if<ValueCall>
True</ValueCall>
do<Statement>
<PrintStatement>
<ValueCall>
print</ValueCall>
<Arguments>
<Arg>
<String_const>
OK</String_const>
</Arg>
</Arguments>
</PrintStatement>
</Statement>
else do<Statement>
<IfStatement>
if<ValueCall>
False</ValueCall>
do<Statement>
<InputStatement>
<ValueCall>
input</ValueCall>
<Arguments>
<Arg>
<String_const>
NOPE</String_const>
</Arg>
</Arguments>
</InputStatement>
</Statement>
</IfStatement>
</Statement>
</IfStatement>
</Statement>
<Statement>
<IfStatement>
if<ValueCall>
False</ValueCall>
do<Statement>
<Block>
Label 5B0B
Number 5
Parents[0]
Children[]
<Statement>
<PrintStatement>
<ValueCall>
print</ValueCall>
<Arguments>
<Arg>
<String_const>
nope</String_const>
</Arg>
</Arguments>
</PrintStatement>
</Statement>
</Block>
</Statement>
else do<Statement>
<IfStatement>
if<BinaryOperator>
<Int_Const>
1</Int_Const>
EQUALS<Int_Const>
1</Int_Const>
</BinaryOperator>
do<Statement>
<Block>
Label 6B0B
Number 6
Parents[0]
Children[]
<Statement>
<PrintStatement>
<ValueCall>
print</ValueCall>
<Arguments>
<Arg>
<String_const>
Ok</String_const>
</Arg>
</Arguments>
</PrintStatement>
</Statement>
</Block>
</Statement>
</IfStatement>
</Statement>
</IfStatement>
</Statement>
</Root>
