Block:0B
000: LABEL 0B;
001: BEGININIT ;
002: LOAD _r0 ['INTEGER_CONST', 2];
003: INITARR ['INT', 'array'] _r0;
004: ENDINIT ;
005: BEGINEXP ;
006: LOAD _r0 ['INTEGER_CONST', 13];
007: LOAD _r1 ['INTEGER_CONST', 123];
008: LOAD _r2 ['INTEGER_CONST', 12];
009: MULTIPLY _r1 _r2;
010: LOAD _r2 ['INTEGER_CONST', 10];
011: DIVIDE _r1 _r2;
012: PLUS _r0 _r1;
013: ENDEXP ;
014: BEGINEXP ;
015: LOAD _r0 ['INTEGER_CONST', 12];
016: LOAD _r1 ['INTEGER_CONST', 0];
017: PLUS _r0 _r1;
018: ENDEXP ;
019: BEGINMODIFY ;
020: LOAD _r0 ['INTEGER_CONST', 0];
021: PUSH _r0;
022: LOAD _r0 ['INTEGER_CONST', 0];
023: LOAD _r1 _r0;
024: POP _r0;
025: ASSIGN ['array', '_r1'] _r0;
026: ENDMODIFY ;
027: LOAD _r0 ['NULL', 'null'];
028: PUSH _r0;
029: LOAD _r0 ['INTEGER_CONST', 1];
030: PUSH _r0;
031: CALL print;
032: POP _r0;
033: BEGININIT ;
034: LOAD _r0 ['INTEGER_CONST', 10];
035: LOAD _r1 ['INTEGER_CONST', 15];
036: MULTIPLY _r0 _r1;
037: LOAD _r1 ['INTEGER_CONST', 1];
038: PLUS _r0 _r1;
039: INIT ['INT', 'y'] _r0;
040: ENDINIT ;
041: CALLBLOCK 0B0B;
042: CALLBLOCK 1B0B;
043: BEGININIT ;
044: LOAD _r0 ['INTEGER_CONST', 0];
045: INIT ['INT', 'i'] _r0;
046: ENDINIT ;
047: CALLBLOCK 3B0B;
048: LABEL E0B;

Block:0B0B
000: BEGININIT ;
001: LOAD _r0 ['INTEGER_CONST', 0];
002: INIT ['INT', 'i'] _r0;
003: ENDINIT ;
004: LABEL 0B0B;
005: LOAD _r0 i;
006: LOAD _r1 ['INTEGER_CONST', 0];
007: EQUALS _r0 _r1;
008: JUMPZ E0B0B _r0;
009: BEGININIT ;
010: LOAD _r0 ['INTEGER_CONST', 2];
011: INITARR ['INT', 'array'] _r0;
012: ENDINIT ;
013: BEGINMODIFY ;
014: LOAD _r0 ['INTEGER_CONST', 0];
015: PUSH _r0;
016: LOAD _r0 ['INTEGER_CONST', 0];
017: LOAD _r1 _r0;
018: POP _r0;
019: ASSIGN ['array', '_r1'] _r0;
020: ENDMODIFY ;
021: BEGINMODIFY ;
022: LOAD _r0 ['INTEGER_CONST', 1];
023: PUSH _r0;
024: LOAD _r0 ['INTEGER_CONST', 1];
025: LOAD _r1 _r0;
026: POP _r0;
027: ASSIGN ['array', '_r1'] _r0;
028: ENDMODIFY ;
029: BEGININIT ;
030: LOAD _r0 ['INTEGER_CONST', 1];
031: LOAD _r1 ['INTEGER_CONST', 10];
032: PLUS _r0 _r1;
033: INIT ['INT', 'j'] _r0;
034: ENDINIT ;
035: BEGINMODIFY ;
036: LOAD _r0 ['INTEGER_CONST', 12];
037: ASSIGNPLUS j _r0;
038: ENDMODIFY ;
039: BEGINMODIFY ;
040: LOAD _r1 ['INTEGER_CONST', 1];
041: LOADARR _r0 ['array', '_r1'];
042: ASSIGNPLUS j _r0;
043: ENDMODIFY ;
044: LOAD _r0 j;
045: PUSH _r0;
046: LOAD _r0 ['INTEGER_CONST', 1];
047: PUSH _r0;
048: CALL print;
049: POP _r0;
050: BEGINMODIFY ;
051: LOAD _r0 j;
052: PUSH _r0;
053: LOAD _r0 ['INTEGER_CONST', 1];
054: LOAD _r1 _r0;
055: POP _r0;
056: ASSIGNMULTIPLY ['array', '_r1'] _r0;
057: ENDMODIFY ;
058: JUMP C0B0B;
059: LOAD _r0 ['INTEGER_CONST', 12];
060: PUSH _r0;
061: LOAD _r0 ['INTEGER_CONST', 1];
062: PUSH _r0;
063: CALL print;
064: POP _r0;
065: PUSH _r0;
066: LOAD _r0 ['INTEGER_CONST', 1];
067: PUSH _r0;
068: CALL print;
069: POP _r0;
070: LOAD _r0 ['INTEGER_CONST', 0];
071: PUSH _r0;
072: CALL input;
073: POP _r0;
074: LABEL C0B0B;
075: BEGINMODIFY ;
076: LOAD _r0 ['INTEGER_CONST', 1];
077: ASSIGNPLUS i _r0;
078: ENDMODIFY ;
079: JUMP 0B0B;
080: LABEL E0B0B;

Block:1B0B
000: BEGINEXP ;
001: LOAD _r0 ['INTEGER_CONST', 12];
002: ENDEXP ;
003: JUMPZ N1B0B _r0;
004: LABEL 1B0B;
005: JUMP E1B0B;
006: LABEL N1B0B;
007: CALLBLOCK 2B0B;
008: LABEL E1B0B;

Block:2B0B
000: LABEL 2B0B;
001: LABEL E2B0B;

Block:3B0B
000: LABEL 3B0B;
001: BEGININIT ;
002: LOAD _r0 ['NULL', ''];
003: INIT ['INT', 'i'] _r0;
004: ENDINIT ;
005: BEGINMODIFY ;
006: LOAD _r0 ['INTEGER_CONST', 12];
007: ASSIGN i _r0;
008: ENDMODIFY ;
009: BEGININIT ;
010: LOAD _r0 i;
011: LOAD _r1 ['INTEGER_CONST', 2];
012: MULTIPLY _r0 _r1;
013: INIT ['INT', 'j'] _r0;
014: ENDINIT ;
015: LABEL E3B0B;